"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const j=require("change-case"),v=require("diff"),O=require("pluralize");/**
 * json2type
 * @author KotoriK
 * @date 2021.6
 * @license MIT
 */const p=O.singular;class y{_cache={};_cache_r={};_unnameCount=0;_printCache(){const e=Object.entries(this._cache_r);return e.length>0?e.map(([n,t])=>`interface ${n}${t}`).join(`
`):""}parseToTypes(e,n="DefaultInterface"){if(typeof e!="object")throw TypeError('param "obj" must be an object, but got '+typeof e);return`interface ${n}${this._parseObjectToTypes(e)}
${this._printCache()}`}_parseObjectToTypes(e){return`{
`+Object.entries(e).sort(b).map(([n,t])=>{const i=S(n);return`${i}:${this._typeof(t,i)}`}).join(`
`)+`
}`}_printArrayType(e,n){const t=new Set;let i;for(const s of e)t.add($(s));if(t.size==1&&t.has("Record<string,any>")){t.clear();for(const c of e)t.add(this._checkThenParseObject(c,n&&p(n)));const s=Array.from(t);if(t.size==1)i=s[0];else{const c=s.map(a=>this._cache_r[a]);let o=c[0],u=s[0];for(let a=1;a<c.length;a++){const l=c[a],f=A(o,l);if(f)o=f,u=u.concat(s[a]);else return i=s.join(" | "),`Array<${i}>`}for(let a=0;a<c.length;a++)this._cache[c[a]]=u,delete this._cache_r[s[a]];this._cache_r[u]=o,i=u}}else e.length===0?i="unknown":i=_(t," | ");return`Array<${i}>`}_checkThenParseObject(e,n){if(e instanceof Array)return this._printArrayType(e,n);if(e!=null){if(n){const s=this._tryParseIdMap(e,n);if(s)return s}const t=this._parseObjectToTypes(e);if(t.match(/{\s*}/))return t;const i=this._cache[t];if(i)return i;{let s=n?j.pascalCase(n.match(/^["']\d/)?"I"+n:n):this._defaultName(),c;for(;c=this._cache_r[s];){const o=w(c,t);if(o)return this._cache[o]=s,this._cache[c]=s,this._cache[t]=s,this._cache_r[s]=o,s;s=s.concat("_")}return this._cache_r[s]=t,this._cache[t]=s,s}}return"null"}_tryParseIdMap(e,n){const t=Object.keys(e);if(t.length>0&&t.every(i=>i.match(/^\d+$/))){const i=p(n);return`{[id:number]:${_(new Set(Object.values(e).map(s=>this._typeof(s,i))),"|")}}`}}_typeof(e,n){let t=typeof e;switch(t){case"object":return this._checkThenParseObject(e,n);case"string":case"number":case"boolean":return t;default:throw t+" isn't support yet."}}_defaultName(){return"I"+this._unnameCount++}}function $(r){let e=typeof r;switch(e){case"object":return r===null?"undefined":"Record<string,any>";case"string":case"number":case"boolean":return e;default:throw e+" isn't support yet."}}function S(r){return r.match(/^\d/)?`"${r}"`:r.match(/[\u0000-#%-/:-@[-^`{-\u007f]/)?`"${r}"`:r}const d=r=>r.startsWith("{")&&r.endsWith("}");function w(r,e){if(d(r)&&d(e)){const[n,t,i]=g(r,e);return T(n,t,i)}}const A=(r,e)=>T(...g(r,e));function g(r,e){const n=v.diffLines(r.replaceAll(/^{|}/mg,""),e.replaceAll(/^{|}/mg,"")),t=[],i=[],s=[];for(const c of n)c.added?i.push(...h(c.value)):c.removed?s.push(...h(c.value)):t.push(...h(c.value));return[t,i,s]}function m(r){switch(r){case"string":case"boolean":case"number":return!0;default:return!1}}function T(r,e,n){const t=Object.fromEntries(n),i=[],s=[];for(const c of e){const[o,u]=c;let a=o,l=t[a]||t[a=o+"?"];if(l){if(l!==u){if(m(l)&&m(u))c[1]=l+"|"+u;else if(l==="null"||u==="null")c[0]+="?";else return;i.push(c),delete t[a]}}else s.push(c)}for(const c of Object.entries(t))s.push(c);return`{
`+Array.from(C(r,i,s.map(([c,o])=>[c.endsWith("?")?c:c+"?",o]))).sort(b).map(([c,o])=>`${c}:${o}`).join(`
`)+`
}`}const h=r=>r.split(`
`).filter(e=>e).map(e=>e.split(":"));function b([r],[e]){const n=Math.min(r.length,e.length);let t;for(let i=0;i<n;i++)if(t=r.charCodeAt(i)-e.charCodeAt(i),t!==0)return t;return r.length-e.length}function _(r,e){let n="";for(const t of r)n+=t+e;return n.slice(0,-e.length)}function*C(...r){for(const e of r)for(const n of e)yield n}function F(r,e="DefaultInterface"){return new y().parseToTypes(JSON.parse(r),e)}exports.Json2Type=y;exports.parseToTypes=F;
